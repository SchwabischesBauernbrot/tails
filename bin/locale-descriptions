#!/usr/bin/python3

import sys
from pathlib import Path
import toml
import re

ERRORS = 0
LANGUAGE_RE = re.compile(r'^"Language:\s+(.*)\\n"$')
MAPFILE="po/po-to-mozilla.toml"


def get_language(pofile: Path) -> str:
    for line in pofile.open():
        match = LANGUAGE_RE.match(line)
        if match is not None:
            return match.group(1)
    raise ValueError(f"Could not extract language from file {pofile}")


class LocaleDescriptions:
    def __init__(self):
        self.n_errors = 0
        self.po_to_mozilla = toml.load(open(MAPFILE))

    def get_all_mozlocales(self):
        yield from self.po_to_mozilla.get('extra', {}).get('extra_languages', [])
        for po in sorted(Path("po/").glob("*.po")):
            moz_locale = get_language(po)

            if "_" in moz_locale:
                lang, sub = moz_locale.split("_", maxsplit=1)
                yield f"{lang}-{sub}:{sub}"
            elif moz_locale in self.po_to_mozilla["map"]:
                value = self.po_to_mozilla["map"][moz_locale]
                if type(value) is str:
                    yield value
                else:
                    yield from value
            else:
                print(
                    f"Could not find {moz_locale} (from {po}), "
                    f"please add it to {MAPFILE}",
                    file=sys.stderr,
                )
                self.n_errors += 1


def main():
    helper = LocaleDescriptions()
    for out in sorted(helper.get_all_mozlocales()):
        print(out)
    sys.exit(0 if not helper.n_errors else 1)


if __name__ == "__main__":
    main()
