#!/bin/sh

PREREQS="plymouth read-and-update-random-seed-sector"

prereqs() { echo "$PREREQS"; }

case "$1" in
	prereqs)
	prereqs
	exit 0
	;;
esac

set -eu

REPARTITIONING_ERROR_FLAG_FILE=/run/repartitioning-failed

. /scripts/functions

set -x

if [ -z "${FSUUID:-}" ]; then
	echo "\$FSUUID is unset, probably because the boot medium is an ISO, and not a USB image. Skipping partitioning."
	exit 0
fi

# Wait for system partition
log_begin_msg "Waiting for system partition to become available"
i=0
while true; do
    if [ -b "/dev/disk/by-uuid/${FSUUID}" ]; then
        SYSTEM_PARTITION="$(readlink -f "/dev/disk/by-uuid/${FSUUID}")"
        PARENT_PATH="$(udevadm info --query=property --name="${SYSTEM_PARTITION}" |
            sed -n '/^ID_PATH=/ s/^ID_PATH=// p')"
        PARENT_DEVICE="$(readlink -f "/dev/disk/by-path/${PARENT_PATH}")"
        if [ -b "${PARENT_DEVICE}" ]; then
            break
        fi
    fi

    if [ "$i" -ge 300 ]; then
        log_failure_msg "Reached timeout waiting for system partition." \
            "Skipping partitioning."
        exit 0
    fi

    sleep 0.2
    i="$((i + 1))"
done
log_end_msg


repair_system_partition() {
	set +e
	fsck.fat -a -w -V -v "${SYSTEM_PARTITION}"
	FSCK_EXIT_CODE=$?
	set -e
	case "${FSCK_EXIT_CODE}" in
		0)
			_log_msg "fsck has detected no recoverable errors"
			;;
		1)
			_log_msg "fsck has fixed errors, deleting fsck recovery files"
			MOUNTPOINT=$(mktemp -d)
			mount -t vfat "${SYSTEM_PARTITION}" "${MOUNTPOINT}"
			find "${MOUNTPOINT}" \
			     -maxdepth 1 -type f -iname 'FSCK*.REC' \
			     -exec rm '{}' \;
			umount "${MOUNTPOINT}"
			;;
		*)
			_log_msg "fsck usage error. Ignoring and booting anyway."
			;;
	esac
}

# This section is duplicated in config/chroot_local-includes/usr/local/lib/tails-shell-library/hardware.sh
# please keep them in sync!

# Check if this is first boot
GUID=$(sgdisk --print "${PARENT_DEVICE}" \
	| sed -n '/^Disk identifier (GUID)/ s/^Disk identifier (GUID): // p')

if [ "${GUID}" = "17B81DA0-8B1E-4269-9C39-FE5C7B9B58A3" ]; then
  _log_msg "This is the first boot, so repartitioning"
  PLYMOUTH_MSG="Preparing Tails for first use..."
  plymouth display-message --text="${PLYMOUTH_MSG}"
  if ! /scripts/lib/first_boot_repartition "${PARENT_DEVICE}" "${SYSTEM_PARTITION}" "${REPARTITIONING_ERROR_FLAG_FILE}"; then
    _log_msg "Repartitioning failed"
    touch "${REPARTITIONING_ERROR_FLAG_FILE}"
  fi
  plymouth hide-message --text="${PLYMOUTH_MSG}"
else
  # The "test_gpt_corruption" option is only effective on the first boot. To
  # avoid confusion, we don't allow booting with this option when it's
  # not the first boot.
  if grep -qw "test_gpt_corruption" /proc/cmdline; then
    MSG="The 'test_gpt_corruption' option is only effective on the first boot, and it's not the first boot. Please remove the 'test_gpt_corruption' option from the boot command line. Press ENTER to shut down."
    plymouth message --text="${MSG}"
    plymouth watch-keystroke > /dev/null
    poweroff -f
  fi

  # Verify the partition table
  if ! /scripts/lib/verify_partition_table "${PARENT_DEVICE}" "${REPARTITIONING_ERROR_FLAG_FILE}"; then
    _log_msg "The partition table is invalid"
    touch "${REPARTITIONING_ERROR_FLAG_FILE}"
  fi

  _log_msg "This is not the first boot, so repairing filesystem"
  PLYMOUTH_MSG="Checking the Tails system partition for errors..."
  plymouth display-message --text="${PLYMOUTH_MSG}"
  repair_system_partition
  plymouth hide-message --text="${PLYMOUTH_MSG}"
fi
