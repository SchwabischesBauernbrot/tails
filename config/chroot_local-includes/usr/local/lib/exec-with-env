#!/usr/bin/env python3

# This script exports allow-listed environment variables from the file
# specified in the ENVFILE argument and then executes the specified
# command.
#
# If any environment variables from ENVFILE are already set in the
# current environment, those are *not* overwritten, so environment
# variables set by the caller take precedence over the ones from ENVFILE.
#
# ENVFILE must be null-terminated.

import os
import sys

from tailslib.userenv import read_allowed_env_from_file, allowed_env

usage = f"{sys.argv[0]} ENVFILE [--delete] [--] COMMAND [ARG]..."


def main():
    if os.geteuid() != 1000:
        print(f"{sys.argv[0]}: This script must be run as amnesia", file=sys.stderr)
        sys.exit(1)

    if len(sys.argv) < 3:
        print(usage, file=sys.stderr)
        sys.exit(1)

    envfile = sys.argv[1]
    env = read_allowed_env_from_file(envfile)

    # Update with allowed environment variables from the current
    # environment (because those should take precedence)
    env.update(allowed_env(os.environ))

    if sys.argv[2] == "--delete":
        os.remove(envfile)
        del sys.argv[2]

    if sys.argv[2] == "--":
        del sys.argv[2]

    file = sys.argv[2]
    args = sys.argv[2:]
    os.execvpe(file, args, env=env)


if __name__ == "__main__":
    main()
