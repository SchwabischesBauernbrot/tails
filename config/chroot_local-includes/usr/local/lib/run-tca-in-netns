#!/usr/bin/python3

import sys
from pathlib import Path
from subprocess import check_output, CalledProcessError
from logging import getLogger, basicConfig

from tailslib import LIVE_USERNAME
from tailslib.netnsdrop import run_in_netns
from tailslib.persistence import (
    has_persistence,
    has_unlocked_persistence,
)


A11Y_BUS_PROXY_PATH="/run/user/1000/.dbus-proxy/a11y-bus-proxy.sock"
IBUS_PROXY_PATH="/run/user/1000/.dbus-proxy/ibus-proxy.sock"
A11Y_BUS_SANDBOX_PATH="/run/user/1000/tails-sandbox/a11y-bus-proxy.sock"
IBUS_SANDBOX_PATH="/run/user/1000/tails-sandbox/ibus-proxy.sock"
NETNS = "tca"
log = getLogger(__name__)


def main():
    python_bin = "/usr/bin/python3"
    program = "/usr/lib/python3/dist-packages/tca/application.py"

    confdir = Path("/var/lib/tca/")
    conffile = confdir / "tca.conf"
    confdir.mkdir(mode=0o700, exist_ok=True)
    confdir.chmod(0o700)
    conffile.touch(mode=0o600)

    statedir = Path("/run/tca/")
    statefile = statedir / "tca.state"
    statedir.mkdir(mode=0o700, exist_ok=True)
    statedir.chmod(0o700)
    statefile.touch(mode=0o600)

    portalsock = "/run/tca-portal.sock"

    connect_drop_cmd = [
        "/usr/local/lib/connect-drop",
        "-c",
        "FILE:%s:r+" % statefile,
        "-c",
        "UNIX:%s" % portalsock,
        "--",
    ]

    tca_cmd = [
        python_bin,
        program,
        *sys.argv[1:],
    ]
    if has_persistence():
        tca_cmd.append("--has-persistence")
    if has_unlocked_persistence():
        tca_cmd.append("--has-unlocked-persistence")

    run_in_netns(*tca_cmd, netns=NETNS, connect_drop_cmd=connect_drop_cmd)


if __name__ == "__main__":
    basicConfig(level="DEBUG")
    main()
