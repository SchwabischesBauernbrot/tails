#!/bin/bash

# This script is invoked before starting gnome-shell. It dumps its own
# environment for usage by other processes which need some environment
# variables set to work correctly, for example processes started via
# systemd system units don't have DBUS_SESSION_BUS_ADDRESS set.
#
# This process is run as amnesia and the environment file is writable
# by amnesia, so to avoid privilege escalation, it's important that the
# environment file is never exported in a process with more privileges
# than amnesia.

set -eu

ENV_VARS_TO_DUMP="
DBUS_SESSION_BUS_ADDRESS
DISPLAY
LANG
WAYLAND_DISPLAY
XAUTHORITY
XDG_RUNTIME_DIR
XDG_CURRENT_DESKTOP
"

if [ -z "${EUID:-}" ]; then
  # bashsupport disable=BP3002
  EUID=$(id -u)
fi

USER_ENV_FILE="/run/user/${EUID}/user-env"

# Set some environment variables which are not set by systemd but which
# we still need in some processes which export the environment file.
if [ -z "${DISPLAY:-}" ]; then
  export DISPLAY=:0
fi

if [ -z "${XAUTHORITY:-}" ]; then
  for xauth in "/run/user/${EUID}/.mutter-Xwaylandauth."*; do
    if [ -e "${xauth}" ]; then
      export XAUTHORITY="${xauth}"
    fi
  done
fi
if [ -z "${XAUTHORITY:-}" ]; then
  echo >&2 "Failed to set XAUTHORITY: No file matching /run/user/${EUID}/.mutter-Xwaylandauth.*"
  exit 1
fi

if [ -z "${WAYLAND_DISPLAY:-}" ]; then
  for wayland_display in "/run/user/${EUID}/wayland-"*; do
    if [ -e "${wayland_display}" ]; then
      export WAYLAND_DISPLAY="${wayland_display}"
    fi
  done
fi
if [ -z "${WAYLAND_DISPLAY:-}" ]; then
  echo >&2 "Failed to set XAUTHORITY: No file matching /run/user/${EUID}/wayland-*"
  exit 1
fi

# To avoid issues with environment variables that contain newlines, we
# dump the environment null-terminated
full_env=$(env --null)

# Get the environment variables from the environment which we want to dump
while IFS= read -r -d $'\0' var; do
  for var_to_dump in ${ENV_VARS_TO_DUMP}; do
    if echo "${var}" | grep -q "^${var_to_dump}="; then
      if [ -z "${filtered_env:-}" ]; then
        filtered_env="${var}"
      else
        filtered_env="${filtered_env}\0${var}"
      fi
    fi
  done
done <<< "${full_env}"

# Dump the environment variables
echo "${filtered_env}" > "${USER_ENV_FILE}"
