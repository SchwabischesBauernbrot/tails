#!/usr/bin/python3

'''
This is the privileged part for gnome-shell-dump-environment.

It reads the amnesia-owned file ~/.gnome-shell-environment as root and
writes its content to /run/gnome-shell-environment.

To avoid symlink attacks, which would allow amnesia to read arbitrary
files as root, we read the file below the nosymfollow mountpoint, which
has the effect that when a symlink would be followed *implicitly* (i.e.
without calling readlink(2) or similar), the operation fails with ELOOP.
'''

import shutil
import sys
from pathlib import Path

from tailslib import LIVE_USERNAME, NOSYMFOLLOW_MOUNTPOINT

AMNESIA_OWNED_ENV_FILE = Path(NOSYMFOLLOW_MOUNTPOINT, f"home/{LIVE_USERNAME}/.gnome-shell-environment")


def main():
    destdir = Path('/run/gnome-shell-environment/')
    dest = destdir / 'environ'
    try:
        # the exist_ok parameter is critical in this block

        # what exist_ok does here is check the returncode of mkdir function
        destdir.mkdir(mode=0o755, exist_ok=False)

        # since we are setting exist_ok=False, this will result in
        #   openat(..., O_WRONLY|O_CREAT|O_EXCL|O_CLOEXEC)
        # so if pathname already exists, it will fail with the error EEXIST
        #    (see openat(2))
        # which in turn would raise a Python exception
        # thus, this creates a file only if it doesn't exist, in a non-racy way
        dest.touch(mode=0o640, exist_ok=False)
    except FileExistsError:
        sys.exit(0)
    dest.chmod(0o440)

    src = AMNESIA_OWNED_ENV_FILE
    with src.open('rb') as buf:
        content = buf.read()
    with dest.open('wb') as buf:
        buf.write(content)
    src.unlink()

    shutil.chown(str(dest), group=LIVE_USERNAME)


if __name__ == '__main__':
    main()
