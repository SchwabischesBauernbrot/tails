#!/usr/bin/python3
# -*- encoding: UTF-8
"""This scripts show a dialog with basic information about the
running Tails installation.
"""

import datetime
import gettext
import subprocess

from gi import require_version
require_version('Gtk', '3.0')
from gi.repository import GLib, Gtk, GdkPixbuf


class AboutTails(Gtk.AboutDialog):
    """A simple class showing the dialog"""
    def __init__(self):
        gettext.install("tails")
        tails_version_data = self.tails_version_data()
        Gtk.AboutDialog.__init__(self)

        self.set_program_name(_("Tails"))

        headerbar = Gtk.HeaderBar()
        headerbar.set_title(_("About Tails"))
        headerbar.set_show_close_button(True)
        self.set_titlebar(headerbar)

        try:
            self.set_logo(GdkPixbuf.Pixbuf.new_from_file_at_size(
                '/usr/share/tails/tails-logo-flat-inverted.svg', 400, 200))
        except GLib.GError:
            pass

        website = tails_version_data["HOME_URL"]

        if tails_version_data:
            comment = ""
            version = tails_version_data["VERSION"]
            built_name = tails_version_data["TAILS_GIT_SHORT_ID"]
            if tails_version_data["TAILS_DISTRIBUTION"] == "UNRELEASED":
                version += " " + _("UNRELEASED")
                if "TAILS_GIT_BASE_BRANCH" in tails_version_data:
                    built_name += "+%s@%s" % (
                        tails_version_data["TAILS_GIT_BASE_BRANCH"],
                        tails_version_data["TAILS_GIT_BASE_SHORT_ID"],
                    )

                built_time = datetime.datetime.fromtimestamp(
                    int(tails_version_data["TAILS_SOURCE_DATE_EPOCH"])
                )
                comment = _("Build from %s on %s") % (built_name, built_time)
            else:
                comment = _("Build from %s") % (built_name)

            if "TAILS_GIT_TAG" in tails_version_data:
                tag = tails_version_data["TAILS_GIT_TAG"].replace("~", "-")
                if "~" in version:
                    website += "news/test_%s" % tag
                else:
                    website += "news/version_%s" % tag

            self.set_version(version)
            self.set_comments(comment)

        self.set_copyright("Tails developers")
        self.set_website(website)
        self.connect("delete-event", Gtk.main_quit)
        self.connect("response", Gtk.main_quit)
        self.show_all()
        Gtk.main()

    def tails_version_data(self):
        """dict of information in /etc/os-release"""
        ret = dict()
        try:
            with open("/etc/os-release") as f:
                data = f.read()
            for i in data.splitlines():
                name, value = i.split("=")
                ret[name.strip()] = value.strip('"')

        except OSError:
            pass

        return ret


AboutTails()
