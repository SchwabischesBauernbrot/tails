[[!meta title="HTTP mirror pool"]]

[[!toc levels=2]]

# Big picture

The Tails downloads are served using two different mirror pools
([[HTTP|mirrors#http-pool]] and [[DNS|mirrors#dns-pool]]), depending on the use
case.

<a id="http-pool"></a>

## HTTP pool

A web service redirects clients to the nearest mirror based on IP
geolocation data:

- The list of mirrors is automatically and periodically loaded from [a JSON
  file on our website](https://tails.net/mirrors.json). See the [[Mirror
  pool configuration|mirrors#configuration]] section below for details.
- IP geolocation data is automatically and periodically updated from [MaxMind's
  GeoLite2](https://dev.maxmind.com/geoip/geolite2-free-geolocation-data?lang=en)
  databases.
- Downloads are served under the `download.tails.net` domain (see [mirror
  statistics](https://download.tails.net/tails?mirrorstats)).
- [Mirrorbits](https://github.com/etix/mirrorbits) performs the actual
  redirections according to its own internal score system, which is based on
  mirrors' weights (imported from `mirrors.json`) and IP geolocation data
  (Autonomous Systems, countries and calculated distances).
- The server-side code can be found in [[!tails_gitlab
  tails/puppet-tails/-/blob/master/manifests/profile/mirrorbits.pp]]

<a id="dns-pool"></a>

## DNS pool

A DNS Round Robin pool points to a few fast and
reliable mirrors. It is used as a fallback for the versions
of *Tails Upgrader* included up to Tails 5.8, inclusive. So we still
have a DNS dynamic update system, re-purposed from the one we already had
(`dl.amnesia.boum.org`).

It's configured via this Git repository:

    tails_git@65wwrbljzca2cxztur6xz652c2zvhvj3ebgyestpgvfbzaamkamf57yd.onion:/srv/repositories/mirrors.git

<a id="configuration"></a>

# Mirror pool configuration

The server-side redirector fetches the mirror pool configuration file
from our website: <https://tails.net/mirrors.json>

The configuration file is written in JSON, to avoid the
need to use a third-party parser.

The configuration file is stored in a
([[!tails_gitweb_repo mirror-pool desc="dedicated Git repository"]]),
that is added to our website with the ikiwiki underlay mechanism.
Using a separate Git repository gives us finer-grained access control
possibilities in the long run, e.g. we may want to let people who
don't have commit access to Git maintain the mirrors pool. Note that
we'll need to serve the configuration file from outside our website if
we ever want to do so: an _underlay_ can affect our website in ways
that are probably (almost?) as bad as what one can do with Git access
to the website itself.

The configuration file is essentially a list of mirrors, and for each
of them we need a few values:

 * `url_prefix`: whatever needs to be pre-pended to the path to an ISO
   (e.g. `/stable/tails-i386-2.0/tails-i386-2.0.iso`) that is shared
   between all mirrors, to form a complete URL to that ISO; for
   example `https://mirrors.wikimedia.org/tails/`

 * `rsync_url`: this URL is used by the server-side redirector to periodically
   check each mirror's health.

 * `weight`: the probability this mirror has to be picked by the
   dispatcher code, expressed as a non-negative integer; weight
   0 means that the mirror is currently disabled, and will never be
   redirected to

 * `email` (optional): the email address of the mirror's operator

 * `notes` (optional): various additional notes that can be useful to
   the managers of the mirror pool

For a more formal, and probably more up-to-date definition of the data
model, better see
[its JSON schema](https://gitlab.tails.boum.org/tails/mirror-pool/-/blob/master/schema.json).

# Documentation for mirror pool administrators

See `README.mdwn` in this Git repository:

    tails_git@65wwrbljzca2cxztur6xz652c2zvhvj3ebgyestpgvfbzaamkamf57yd.onion:/srv/repositories/mirrors.git
